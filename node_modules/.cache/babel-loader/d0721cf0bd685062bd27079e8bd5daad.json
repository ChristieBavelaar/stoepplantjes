{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/christie/webdev/hortus/React/hortus/src/components/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //import components\n\nimport { Row, Col } from 'react-bootstrap';\nimport Determine from './Determine';\nimport Result from './Result';\nimport Options from './Options';\nimport NotFound from './NotFound';\nimport Found from './Found';\n\nfunction Content() {\n  _s();\n\n  const [id, setId] = useState([0, 1]);\n  let content;\n  cost[(history, setHistory)] = useState([]);\n\n  switch (id[0]) {\n    case 0:\n      console.log(\"determine\");\n      content = /*#__PURE__*/_jsxDEV(Determine, {\n        id: id,\n        setId: setId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case 1:\n      console.log(\"result\");\n      console.log(id);\n      content = /*#__PURE__*/_jsxDEV(Result, {\n        id: id[1],\n        setId: setId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case 2:\n      console.log(\"Option\");\n      console.log(id);\n      content = /*#__PURE__*/_jsxDEV(Options, {\n        id: id,\n        setId: setId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case 3:\n      content = /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case 4:\n      console.log(\"Found\" + id);\n      content = /*#__PURE__*/_jsxDEV(Found, {\n        id: id[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n      break;\n\n    default:\n      console.log(\"Error no correct table\");\n  }\n  /*if(id>=0){\n  \tcontent = <Determine id={id} setId={setId}/>\n  }else{\n  \tcontent = <Result id={Math.abs(id)}/>\n  }*/\n\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      lg: 2,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"card\",\n      md: 6,\n      lg: 8,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      lg: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Content, \"nmN9a1ggHu8oUu0oewPkDrmmm8E=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/christie/webdev/hortus/React/hortus/src/components/Content.js"],"names":["React","useState","Row","Col","Determine","Result","Options","NotFound","Found","Content","id","setId","content","cost","history","setHistory","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,OAAT,GAAkB;AAAA;;AACjB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcV,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,CAA5B;AACA,MAAIW,OAAJ;AACAC,EAAAA,IAAI,EAAEC,OAAO,EAAEC,UAAX,EAAJ,GAA6Bd,QAAQ,CAAC,EAAD,CAArC;;AAEA,UAAOS,EAAE,CAAC,CAAD,CAAT;AACC,SAAK,CAAL;AACCM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAL,MAAAA,OAAO,gBAAG,QAAC,SAAD;AAAW,QAAA,EAAE,EAAEF,EAAf;AAAmB,QAAA,KAAK,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAV;AACA;;AACD,SAAK,CAAL;AACCK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACAE,MAAAA,OAAO,gBAAG,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAEF,EAAE,CAAC,CAAD,CAAd;AAAmB,QAAA,KAAK,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAV;AACA;;AACD,SAAK,CAAL;AACCK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACAE,MAAAA,OAAO,gBAAG,QAAC,OAAD;AAAS,QAAA,EAAE,EAAEF,EAAb;AAAiB,QAAA,KAAK,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAV;AACA;;AACD,SAAK,CAAL;AACCC,MAAAA,OAAO,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAV;AACA;;AACD,SAAK,CAAL;AACCI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUP,EAAtB;AACAE,MAAAA,OAAO,gBAAG,QAAC,KAAD;AAAO,QAAA,EAAE,EAAEF,EAAE,CAAC,CAAD;AAAb;AAAA;AAAA;AAAA;AAAA,cAAV;AACA;;AACD;AACCM,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAvBF;AA0BA;AACD;AACA;AACA;AACA;;;AACC,sBACC,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACC,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,GAAD;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAuB,MAAA,EAAE,EAAE,CAA3B;AAA8B,MAAA,EAAE,EAAE,CAAlC;AAAA,gBACEL;AADF;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;GA7CQH,O;;KAAAA,O;AA+CT,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react';\n\n//import components\nimport {Row, Col} from 'react-bootstrap';\nimport Determine from './Determine';\nimport Result from './Result';\nimport Options from './Options';\nimport NotFound from './NotFound';\nimport Found from './Found';\n\nfunction Content(){\n\tconst [id, setId] = useState([0,1]);\n\tlet content;\n\tcost [history, setHistory] = useState([]);\n\n\tswitch(id[0]){\n\t\tcase 0:\n\t\t\tconsole.log(\"determine\");\n\t\t\tcontent = <Determine id={id} setId={setId}/>;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tconsole.log(\"result\");\n\t\t\tconsole.log(id);\n\t\t\tcontent = <Result id={id[1]} setId={setId}/>\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tconsole.log(\"Option\");\n\t\t\tconsole.log(id);\n\t\t\tcontent = <Options id={id} setId={setId}/>\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcontent = <NotFound/>\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tconsole.log(\"Found\" + id);\n\t\t\tcontent = <Found id={id[1]}/>\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log(\"Error no correct table\");\n\n\t}\n\t/*if(id>=0){\n\t\tcontent = <Determine id={id} setId={setId}/>\n\t}else{\n\t\tcontent = <Result id={Math.abs(id)}/>\n\t}*/\n\treturn (\n\t\t<Row className=\"container-fluid\">\n\t\t\t<Col md={4} lg={2}> </Col>\n\t\t\t<Col className =\"card\" md={6} lg={8}>\n\t\t\t\t{content}\n\t\t\t</Col>\n\t\t\t<Col md={3} lg={2}></Col>\n\t\t</Row>\n\t);\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}