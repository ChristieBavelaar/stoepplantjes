{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/christie/webdev/hortus/React/hortus/src/components/Options.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport questions from '../data/questions';\nimport { Row, Col } from 'react-bootstrap';\nimport results from '../data/results';\n\nfunction Options({\n  id\n}) {\n  _s();\n\n  const [option, setOption] = useState(1);\n  const maxOption = id.length - 1;\n\n  function vorigeHandler() {\n    if (option > 1) {\n      setOption(option - 1);\n    } else {\n      setOption(maxOption);\n    }\n\n    console.log(\"option: \" + option);\n  }\n\n  function volgendeHandler() {\n    if (option < maxOption) {\n      setOption(option + 1);\n    } else {\n      setOption(1);\n    }\n\n    console.log(\"option: \" + option);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [\"Op basis van uw antwoorden zijn er meerdere mogelijkheden. Check de kenmerken van elke plant om te bepalen welke plant u heeft gevonden.\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fa\",\n          onClick: vorigeHandler,\n          children: \" Vorige \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fa\",\n          onClick: volgendeHandler,\n          children: \" Volgende \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          sm: 0,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plantinfo\",\n            children: [console.log(\"show info of: \" + id[option]), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: results[id[option]][0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 7\n            }, this), \" (\", results[id[option]][1], \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 7\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this), results[id[option]][2], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 7\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fa\",\n            children: \" Dit is mijn plantje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('../images/result/' + id[option] + '.jpeg').default,\n            alt: require('../images/LogoHortus.png'),\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          sm: 0,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Options, \"NeSXQfELiwZYepQ3Njjn42PlZFw=\");\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["/home/christie/webdev/hortus/React/hortus/src/components/Options.js"],"names":["React","useState","questions","Row","Col","results","Options","id","option","setOption","maxOption","length","vorigeHandler","console","log","volgendeHandler","require","default"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport questions from '../data/questions' ;\nimport {Row, Col} from 'react-bootstrap';\nimport results from '../data/results';\n\nfunction Options({id}){\n\tconst [option, setOption] = useState(1);\n\tconst maxOption = id.length-1;\n\tfunction vorigeHandler(){\n\t\tif(option > 1){\n\t\t\tsetOption(option-1);\n\t\t}else{\n\t\t\tsetOption(maxOption);\n\t\t}\n\t\tconsole.log(\"option: \" + option)\n\t}\n\tfunction volgendeHandler(){\n\t\tif(option < maxOption){\n\t\t\tsetOption(option+1);\n\t\t}else{\n\t\t\tsetOption(1);\n\t\t}\n\t\tconsole.log(\"option: \" + option)\n\t}\n\treturn(\n\t\t<div>\n\t\t\t<div className = \"card-header\">\n\t\t\t\tOp basis van uw antwoorden zijn er meerdere mogelijkheden.\n\t\t\t\tCheck de kenmerken van elke plant om te bepalen welke plant u heeft gevonden.\n\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t\t<button className=\"fa\" onClick={vorigeHandler}> Vorige </button>\n\t\t\t\t\t\t<button className=\"fa\" onClick={volgendeHandler}> Volgende </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"card-body\"> \n\t\t\t<Row>\n\t\t\t\t<Col md={2} sm={0}> </Col>\n\t\t\t\t<Col sm={4} >\n\t\t\t\t\t<div className = \"plantinfo\">\n\t\t\t\t\t\t{console.log(\"show info of: \" + id[option])}\n\t\t\t\t\t\t<b>{results[id[option]][0]}</b> ({results[id[option]][1]}) \n\t\t\t\t\t\t<br/> <br/>\n\t\t\t\t\t\t{results[id[option]][2]}\n\t\t\t\t\t\t<br/> <br/>\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className=\"fa\"> Dit is mijn plantje</button>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={4} sm={8}>\n\t\t\t\t\t<img src={require('../images/result/' + id[option] + '.jpeg').default} alt={require('../images/LogoHortus.png')} width=\"100%\"></img>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={2} sm={0}> </Col>\n\t\t\t</Row>\n\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}